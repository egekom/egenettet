<?php

/**
 * @file
 * Simple module that provides a configurable block with Facebook Likebox's plugin.
 */

/**
 * Implements hook_block_info().
 */
function fb_likebox_block_info() {
  $blocks['0']['info'] = t('@site_name on Facebook', array('@site_name' => variable_get('site_name', 'Default site name')));
  $blocks['0']['cache'] = DRUPAL_NO_CACHE;
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function fb_likebox_block_configure($delta = '') {
  switch ($delta) {
    case '0':
      // Facebook Widget settings.
      $form['fb_likebox_display_settings'] = array(
        '#type' => 'fieldset',
        '#title' => t('Display options'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
      );
      $form['fb_likebox_display_settings']['fb_likebox_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Facebook Page URL'),
        '#default_value' => variable_get('fb_likebox_url', 'https://www.facebook.com/FacebookDevelopers'),
        '#description' => t('Enter the Facebook Page URL. I.e.: https://www.facebook.com/FacebookDevelopers'),
        '#required' => TRUE,
      );
      $form['fb_likebox_display_settings']['fb_likebox_app_id'] = array(
        '#type' => 'textfield',
        '#title' => t('Facebook App ID'),
        '#default_value' => variable_get('fb_likebox_app_id', ''),
      );
      $form['fb_likebox_display_settings']['fb_likebox_hide_header'] = array(
        '#type' => 'checkbox',
        '#title' => t('Hide cover photo in the header'),
        '#default_value' => variable_get('fb_likebox_hide_header', '0'),
      );
      $form['fb_likebox_display_settings']['fb_likebox_stream'] = array(
        '#type' => 'checkbox',
        '#title' => t("Show posts from the Page's timeline"),
        '#default_value' => variable_get('fb_likebox_stream', '0'),
      );
      $form['fb_likebox_display_settings']['fb_likebox_show_faces'] = array(
        '#type' => 'checkbox',
        '#title' => t('Show profile photos when friends like this'),
        '#default_value' => variable_get('fb_likebox_show_faces', '1'),
      );
      $form['fb_likebox_display_settings']['fb_likebox_title'] = array(
        '#type' => 'textfield',
        '#title' => t('iFrame title attribute'),
        '#default_value' => variable_get('fb_likebox_title', 'Like us on Facebook'),
        '#description' => t('The value of the title attribute.'),
        '#required' => TRUE,
      );
      $form['fb_likebox_display_settings']['fb_likebox_width'] = array(
        '#type' => 'textfield',
        '#title' => t('Width'),
        '#default_value' => variable_get('fb_likebox_width', '340'),
        '#description' => t('The width of the Facebook likebox. Must be a number between 280 and 500, limits included.'),
        '#required' => TRUE,
      );
      $form['fb_likebox_display_settings']['fb_likebox_height'] = array(
        '#type' => 'textfield',
        '#title' => t('Height'),
        '#default_value' => variable_get('fb_likebox_height', '500'),
        '#description' => t('The height of the plugin in pixels. Must be a number bigger than 130.'),
        '#required' => TRUE,
      );
       $form['fb_likebox_display_settings']['fb_likebox_hide_cta'] = array(
        '#type' => 'checkbox',
        '#title' => t('Hide the custom call to action button (if available)'),
        '#default_value' => variable_get('fb_likebox_hide_cta', '0'),
      );
       $form['fb_likebox_display_settings']['fb_likebox_small_header'] = array(
        '#type' => 'checkbox',
        '#title' => t('Use the small header instead'),
        '#default_value' => variable_get('fb_likebox_small_header', '0'),
      );
       $form['fb_likebox_display_settings']['fb_likebox_adapt_container_width'] = array(
        '#type' => 'checkbox',
        '#title' => t('Try to fit inside the container width'),
        '#default_value' => variable_get('fb_likebox_adapt_container_width', '1'),
      );
      $form['fb_likebox_display_settings']['fb_likebox_language'] = array(
        '#type' => 'select',
        '#title' => t('Choose your language'),
        '#options' => _fb_likebox_languages(),
        '#default_value' => variable_get('fb_likebox_language', 'en_EN'),
      );
      return $form;
  }
}

/**
 * Implements hook_block_view().
 */
function fb_likebox_block_view($delta = '') {
  switch ($delta) {
    case '0':
      $block['content'] = _fb_likebox_block_view();
      break;
  }
  return $block;
}

/**
 * Implements hook_block_save().
 */
function fb_likebox_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case '0':
      // Set the values given in the block form
      variable_set('fb_likebox_url', check_url($edit['fb_likebox_url']));
      variable_set('fb_likebox_app_id', check_plain($edit['fb_likebox_app_id']));
      variable_set('fb_likebox_hide_header', check_plain($edit['fb_likebox_hide_header']));
      variable_set('fb_likebox_stream', check_plain($edit['fb_likebox_stream']));
      variable_set('fb_likebox_show_faces', check_plain($edit['fb_likebox_show_faces']));
      variable_set('fb_likebox_width', check_plain($edit['fb_likebox_width']));
      variable_set('fb_likebox_height', check_plain($edit['fb_likebox_height']));
      variable_set('fb_likebox_title', check_plain($edit['fb_likebox_title']));
      variable_set('fb_likebox_hide_cta', check_plain($edit['fb_likebox_hide_cta']));
      variable_set('fb_likebox_small_header', check_plain($edit['fb_likebox_small_header']));
      variable_set('fb_likebox_adapt_container_width', check_plain($edit['fb_likebox_adapt_container_width']));
      variable_set('fb_likebox_language', check_plain($edit['fb_likebox_language']));
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds validation of block configuration custom fields.
 */
function fb_likebox_form_block_admin_configure_alter(&$form, &$form_state, $form_id) {
  if ($form['module']['#value'] == 'fb_likebox') {
    $form['#validate'][] = '_fb_likebox_validate_block_settings';
  }
}


/**
 * Perform the validation of the block settings.
 */
function _fb_likebox_validate_block_settings(&$form, $form_state) {
  // Facebook display settings validation.
  $fb_url = $form_state['values']['fb_likebox_url'];
  if (!valid_url($fb_url, TRUE)) {
    form_set_error('fb_likebox_url', t('Please enter a valid url.'));
  }

  // Facebook theming settings validation.
  $fb_width = $form_state['values']['fb_likebox_width'];
  if (!is_numeric($fb_width) || intval($fb_width) < 280 || intval($fb_width) > 500) {
    form_set_error('fb_likebox_width', t('Width should be a number between 280 and 500, limits included.'));
  }

  $fb_height = $form_state['values']['fb_likebox_height'];
  if (!is_numeric($fb_height) || intval($fb_height) < 130) {
    form_set_error('fb_likebox_height', t('Height should be a number bigger than 130.'));
  }
}

/**
 * Builds the link needed to connect with facebook.
 */
function _fb_likebox_block_view() {
  // Get the values given in the admin form.
  $fb_url = variable_get('fb_likebox_url', 'https://www.facebook.com/FacebookDevelopers');
  $fb_app_id = variable_get('fb_likebox_app_id', '');
  $fb_hide_header = variable_get('fb_likebox_hide_header', 'false');
  $fb_stream = variable_get('fb_likebox_stream', 'false');
  $fb_show_faces = variable_get('fb_likebox_show_faces', 'true');
  $fb_width = variable_get('fb_likebox_width', '340');
  $fb_height = variable_get('fb_likebox_height', '500');
  $fb_iframe_title = variable_get('fb_likebox_title', 'Like us on Facebook');
  $fb_hide_cta = variable_get('fb_likebox_hide_cta', 'false');
  $fb_small_header = variable_get('fb_likebox_small_header', 'false');
  $fb_adapt_container_width = variable_get('fb_likebox_adapt_container_width', 'true');
  $fb_language = variable_get('fb_likebox_language', 'en_EN');

  $block['root-div'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'id' => array('fb-root'),
    ),
  );

  $block['block'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('fb-page'),
      'data-href' => array($fb_url),
      'data-width' => array($fb_width),
      'data-height' => array($fb_height),
      'data-hide-cover' => array($fb_hide_header),
      'data-show-facepile' => array($fb_show_faces),
      'data-show-posts' => array($fb_stream),
      'data-hide-cta' => array($fb_hide_cta),
      'data-small-header' => array($fb_small_header),
      'data-adapt-container-width' => array($fb_adapt_container_width),
    ),
  );
  $block['block']['child'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('fb-xfbml-parse-ignore'),
    ),
  );
  $block['block']['child']['blockquote'] = array(
    '#type' => 'link',
    '#title' => $fb_iframe_title,
    '#href' => $fb_url,
    '#suffix' => '</blockquote>',
    '#prefix' => '<blockquote cite="' . $fb_url . '">',
  );
  $block['#attached']['js'] = array(
    drupal_get_path('module', 'fb_likebox') . '/fb_likebox.js',
    array(
      'data' => array(
        'fb_likebox_app_id' => $fb_app_id,
        'fb_likebox_language' => $fb_language,
      ),
      'type' => 'setting',
    ),
  );

  return $block;
}

/**
 * Array with supported languages
 */
function _fb_likebox_languages() {
  return array(
    'af_ZA' => 'Afrikaans',
    'ak_GH' => 'Akan',
    'am_ET' => 'Amharic',
    'ar_AR' => 'Arabic',
    'as_IN' => 'Assamese',
    'ay_BO' => 'Aymara',
    'az_AZ' => 'Azerbaijani',
    'be_BY' => 'Belarusian',
    'bg_BG' => 'Bulgarian',
    'bn_IN' => 'Bengali',
    'br_FR' => 'Breton',
    'bs_BA' => 'Bosnian',
    'ca_ES' => 'Catalan',
    'cb_IQ' => 'Sorani Kurdish',
    'ck_US' => 'Cherokee',
    'co_FR' => 'Corsican',
    'cs_CZ' => 'Czech',
    'cx_PH' => 'Cebuano',
    'cy_GB' => 'Welsh',
    'da_DK' => 'Danish',
    'de_DE' => 'German',
    'el_GR' => 'Greek',
    'en_EN' => 'English',
    'en_GB' => 'English (UK)',
    'en_IN' => 'English (India)',
    'en_PI' => 'English (Pirate)',
    'en_UD' => 'English (Upside Down)',
    'en_US' => 'English (US)',
    'eo_EO' => 'Esperanto',
    'es_CL' => 'Spanish (Chile)',
    'es_CO' => 'Spanish (Colombia)',
    'es_ES' => 'Spanish (Spain)',
    'es_LA' => 'Spanish',
    'es_MX' => 'Spanish (Mexico)',
    'es_VE' => 'Spanish (Venezuela)',
    'et_EE' => 'Estonian',
    'eu_ES' => 'Basque',
    'fa_IR' => 'Persian',
    'fb_LT' => 'Leet Speak',
    'ff_NG' => 'Fulah',
    'fi_FI' => 'Finnish',
    'fo_FO' => 'Faroese',
    'fr_CA' => 'French (Canada)',
    'fr_FR' => 'French (France)',
    'fy_NL' => 'Frisian',
    'ga_IE' => 'Irish',
    'gl_ES' => 'Galician',
    'gn_PY' => 'Guarani',
    'gu_IN' => 'Gujarati',
    'gx_GR' => 'Classical Greek',
    'ha_NG' => 'Hausa',
    'he_IL' => 'Hebrew',
    'hi_IN' => 'Hindi',
    'hr_HR' => 'Croatian',
    'hu_HU' => 'Hungarian',
    'hy_AM' => 'Armenian',
    'id_ID' => 'Indonesian',
    'ig_NG' => 'Igbo',
    'is_IS' => 'Icelandic',
    'it_IT' => 'Italian',
    'ja_JP' => 'Japanese',
    'ja_KS' => 'Japanese (Kansai)',
    'jv_ID' => 'Javanese',
    'ka_GE' => 'Georgian',
    'kk_KZ' => 'Kazakh',
    'km_KH' => 'Khmer',
    'kn_IN' => 'Kannada',
    'ko_KR' => 'Korean',
    'ku_TR' => 'Kurdish (Kurmanji)',
    'la_VA' => 'Latin',
    'lg_UG' => 'Ganda',
    'li_NL' => 'Limburgish',
    'ln_CD' => 'Lingala',
    'lo_LA' => 'Lao',
    'lt_LT' => 'Lithuanian',
    'lv_LV' => 'Latvian',
    'mg_MG' => 'Malagasy',
    'mk_MK' => 'Macedonian',
    'ml_IN' => 'Malayalam',
    'mn_MN' => 'Mongolian',
    'mr_IN' => 'Marathi',
    'ms_MY' => 'Malay',
    'mt_MT' => 'Maltese',
    'my_MM' => 'Burmese',
    'nb_NO' => 'Norwegian (bokmal)',
    'nd_ZW' => 'Ndebele',
    'ne_NP' => 'Nepali',
    'nl_BE' => 'Dutch (België)',
    'nl_NL' => 'Dutch',
    'nn_NO' => 'Norwegian (nynorsk)',
    'ny_MW' => 'Chewa',
    'or_IN' => 'Oriya',
    'pa_IN' => 'Punjabi',
    'pl_PL' => 'Polish',
    'ps_AF' => 'Pashto',
    'pt_BR' => 'Portuguese (Brazil)',
    'pt_PT' => 'Portuguese (Portugal)',
    'qu_PE' => 'Quechua',
    'rm_CH' => 'Romansh',
    'ro_RO' => 'Romanian',
    'ru_RU' => 'Russian',
    'rw_RW' => 'Kinyarwanda',
    'sa_IN' => 'Sanskrit',
    'sc_IT' => 'Sardinian',
    'se_NO' => 'Northern Sámi',
    'si_LK' => 'Sinhala',
    'sk_SK' => 'Slovak',
    'sl_SI' => 'Slovenian',
    'sn_ZW' => 'Shona',
    'so_SO' => 'Somali',
    'sq_AL' => 'Albanian',
    'sr_RS' => 'Serbian',
    'sv_SE' => 'Swedish',
    'sw_KE' => 'Swahili',
    'sy_SY' => 'Syriac',
    'sz_PL' => 'Silesian',
    'ta_IN' => 'Tamil',
    'te_IN' => 'Telugu',
    'tg_TJ' => 'Tajik',
    'th_TH' => 'Thai',
    'tk_TM' => 'Turkmen',
    'tl_PH' => 'Filipino',
    'tl_ST' => 'Klingon',
    'tr_TR' => 'Turkish',
    'tt_RU' => 'Tatar',
    'tz_MA' => 'Tamazight',
    'uk_UA' => 'Ukrainian',
    'ur_PK' => 'Urdu',
    'uz_UZ' => 'Uzbek',
    'vi_VN' => 'Vietnamese',
    'wo_SN' => 'Wolof',
    'xh_ZA' => 'Xhosa',
    'yi_DE' => 'Yiddish',
    'yo_NG' => 'Yoruba',
    'zh_CN' => 'Simplified Chinese (China)',
    'zh_HK' => 'Traditional Chinese (Hong Kong)',
    'zh_TW' => 'Traditional Chinese (Taiwan)',
    'zu_ZA' => 'Zulu',
    'zz_TR' => 'Zazaki'
  );
}
