<?php
/**
 * @file
 * Contains Group's implementation of the Node module hooks and forms.
 *
 * Please note that this is an additional layer on top of the Entity
 * implementation. For instance: we do not need hook_node_delete() because
 * our implementation of hook_entity_delete() covers everything.
 */
 
function magenta_group_menu_local_tasks_alter(&$data, $router_item, $root_path) {
	
  if ($root_path == 'group/%') {
    $gid = $router_item['original_map'][1];

  // Remove action links for node creation on group/%group.	
    foreach (node_type_get_types() as $node_type => $info) {
      $item = menu_get_item("group/$gid/node/add/$node_type");
      if ($item['access']) {
        $data['actions']['output'] = array();
      }
	}
  }
}

// Disable Group Setting tab from gnode
function magenta_group_form_node_form_alter(&$form, &$form_state) {

  $type = $form['#node']->type;
  // Then
  if ($type == 'sektionsforside' || $type == 'sektionsside') {
  unset($form['group_settings']);
  }
}

function magenta_group_node_validate($node, $form, &$form_state) {

  $type = $node->type;

  // Then
  if ($type != 'sektionsforside' && $type != 'sektionsside') {
	  $values = $form_state['values']['group_settings'];

	  if (!empty($values['group'])) {
		// Retrieve the group id from the name suffix.
		if ($gid = group_autocomplete_result_gid($values['group'])) {
		  $form_state['values']['group_settings']['gid'] = $gid;
		}
		// Throw an error if the gid could not be retrieved.
		else {
		  form_set_error('group_settings][group', t('Group name not found'));
		}
	  }
  }
}

// Disable check of node from gnode which sends warnings
function magenta_group_module_implements_alter(&$implementations, $hook) {
  if ($hook != 'node_validate') {
    return;
  }
  unset($implementations['gnode']);
}

